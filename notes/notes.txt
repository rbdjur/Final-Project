1.  In ConfirmationRoutes.js

originally I had: 

"

router.get("/", (req, res) => {
    res.send({ message: "hi"})
    console.log("inside router.get on ConfirmationRoutes.js")
 }).then(function (response) {
     res.send("hi");
     console.log("This is the response" + response)
 }).catch(function (error) {
    console.log("this is the catch error" + error)
});
" 

but an error return stating that the .then() and .catch() were not functions.  So I deleted them and once they were deleted, I ran the code with just the .get(). From there I went to the correct route and successfully established the route using express.

2.  An error occured stating Cannot Get "/".  I couldnt think of why this error occured.  However, I remembered that in order to communicate the ConfirmationRoutes.js page with the server, I must export a variable assigned the ConfirmationRoutes.js page: 

        "const router = require("express").Router();"

After assigning the variable a value, I exported the variable using module exports as follows below: 

        " module.exports = router;"


  Once this variable is exported, I went to server.js page and used the code: 

        "app.use(router);"

The router is the entire ConfirmationRoutes.js page, so once this page is used by express, I was able to draw the codes from ConfirmationRoutes onto the server page.  These codes executed when I went to the correct get route. 

3.  Use reactRouter to serve the front end code on App.js + use week 20 HW exercise 4/5 and videos. 

4. July 30, 11:45 pm
-Downloaded "npm install --save express@4.15.2" for on socket.io website in order to implement the chat feature. Installed in the backend files. 

5. July 31 - 1:30 A

downloaded:
"
    npm install --save socket.io

"

added html and minimal css and html to the current page.  

Right now... trying to implement socket.io, I added some html to the "Inquire" tab under the "Interactive" component.  
- The new form is input, commented out possible alternatives. 

In the index.html page I put the socket.io script tag before the body.  example: 
"
    <script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io();
</script>
"

In the server.js file, I added 

"
var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
"

Note to self: Comment back some comments outs.  

Before I could get the front end to render, however when the socket.io settings are turned on, the front end cannot render.

Error I receive is :
"
inside router.get on ConfirmationRoutes.js
Error: ENOENT: no such file or directory, stat '/Users/deguzman714/first_day_stuff/Projects/Final-Project/Final-Project./client/src/App.js'

"

Need to work on getting those features of socket.io working, especially the chat box of server.js.


07/31/2018
Jessica's page 

OG route:

each route for:
bikes, tickets, shoes 



Mongo database 

{
    category:"bikes"
    name:"specizlized hybrid"
    photo: "my.jpg"

    /:category
}



on component did mount {
    render() {
        axios
    }
}




Comment out the fields on the "Inquire" page, only leave a message box. 


08/01/2018
9:45 PM 
If app doesnt work, an issue can be on Chat.js:
* The way:
 "
    class Chat extends React.component
 
                                        "
 
  needs to be modified to: 
  " 
    class App extends Component

                                    "

and add: 

"
    import React, { Component } from "react";

                                            "
to the first line. 


10:51 PM 
added:
"
    "proxy": "http://localhost:3001"
                                  
                                   "

At the end of the object:

"scripts": {

},

I started off with:
"
    "proxy": "http://localhost:3001"
                                
                                "
"3001" is the port the sockets are initilized on... If this doesnt work then change "3001" to "3000" to match the regular server. 


3000 = nothing works at all
3001 = the route "/Confirmation" doesn't work, but route "/Chat" works but the messages or users dont post but a empty message does. 


08/02/2018
1. 
In order to communicate front end and backend... You must go to the client fold and run "npm run start".  Then, open a separate terminal window and go to the backend folder and run "nodemon server.js".  

At that point both servers should be in communication with each other. 

2.  Target hits but without messages or username appearing.
There are blank messages dispalying on the messageboard.  I know the sockets are connected and workign with the server.  However, I beleive there may be a bug in the react component that calls what information to pass to the state and what the setState() method is registering. 

3. 10:57 AM
Got the chat box to work... How would I verify it works for other people who visit that route... not just me. 

4.  11:23 AM
Each individual component and their respecitve routes work on their own.  However, when I try to bring eveyrhting together and create multipe Routes using the built in switch function of react.  I cannot bounce between routes ("/Confirmation" and "/Chat").  

However, These routes work on their own indivvidually whichever route I am on when i reset the front end server and backend server. 

Question: The parts work separate of each other, I used <Switch> + </Switch> in app.js to try and separate the two but how do I make them work together?

I get this error response: 
"


Proxy error: Could not proxy request /socket.io/socket.io.js from localhost:3000 to http://localhost:3000.
See https://nodejs.org/api/errors.html#errors_common_system_errors for more information (ECONNRESET).

                "


11:35 AM 
So I searched the proxy error listed above... What I found was that I should run the backend server first, then the front end server immediately after.  This resolves my issue of having one route work but the other route not working.  Right now, I can switch back and forth between routes.  The only issue is that after I start the backend server and proceed to start the front end server.  The terminal server asks me to run the server on a different port number (in the first working example the port offered was 3002).  I accepted this and continued to run it which resolved my previous issue.  

Question: the pathways for "/Confirmation" and "/Chat" are complete and work in this new format of running on a separate server.  How do I get this to run without having terminal prompting me to run on a different port number?

5:48 PM
Microservice architechuter 

Chat server.js is a microservice... does one part of aplciation. 

6:18 
1. switched server port from "3000" to "3001" and socketPORT from "3001" to "3002".

2. created a variable called messageLog as an empty array.  This empty array will be used to temporarily store messages in the chatbox.  

3. included a socket.emit() function that shows the messages to all the users to a specific socket.  

4. io is everybody / socket is for specific channel. 

5.  in Chat.js I added: 
"
        this.socket.on('RECEIVE_MESSAGELOG', (messageLog) => {
            this.setState({
                messages: messageLog,
            });
        });

                                                        "
These codes communicate with our specific socket which our server is located on.  Here we pass messageLog through this.socket.on(), and update the messages state to the messageLog. 

*messageLog is not previously defined in react because we are using the socket on the server which serves as the reference. 




